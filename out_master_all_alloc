------ JULIA VERSIONINFO ------
Julia Version 1.9.0-DEV.795
Commit 7303b45ad7 (2022-06-17 17:45 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: 128 × AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-14.0.3 (ORCJIT, znver2)
  Threads: 16 on 128 virtual cores
Environment:
  JULIA_LOAD_PATH = @:/tmp/jl_P5GHy6
------ JULIA CPU INFO ------
Sys.CPU_THREADS = 128
AMD EPYC 7502 32-Core Processor: 
           speed         user         nice          sys         idle          irq
#1-128  1499 MHz  1700996972 s     541044 s  911750396 s  18365396536 s          0 s
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Running benchmark for /home/netto/MultithreadingBenchmarks.jl/src/../bench/all_tasks_allocating.jl
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
------ TEST PARAMETERS ------
nthreads_to_test = [1, 4, 8, 12, 16]
nqueries = 1000
num_ops = 1000000
warmup
NUM_QUERIES: 1
WORK_SIZE: 10
5 threads: 
0.000113469 secs
6 threads: 
0.000114829 secs
Results (omitted printing latencies column):
2×6 DataFrame
 Row │ nthreads  time_secs    allocs  memory  gctime_secs  thread_counts      
     │ Int64     Float64      Int64   Int64   Float64      Vector{Int64}      
─────┼────────────────────────────────────────────────────────────────────────
   1 │        5  0.000113469      22    1440          0.0  [0, 1, 0, 0, 0]
   2 │        6  0.000114829      22    1472          0.0  [0, 1, 0, 0, 0, 0]
Processed:
2×6 DataFrame
 Row │ nthreads  time_secs    speedup_factor  marginal_speedup  utilization  latency_quantiles_ms              
     │ Int64     Float64      Float64         Float64           Float64      Tuple…                            
─────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────
   1 │        5  0.000113469        1.0              1.0           0.2       (0.1=>0.0001, 0.5=>0.0001, 0.9=>…
   2 │        6  0.000114829        0.988156        -0.0118437     0.164693  (0.1=>9.0e-5, 0.5=>9.0e-5, 0.9=>…
run benchmark
NUM_QUERIES: 1000
WORK_SIZE: 1000000
1 threads: 
3.506279096 secs
4 threads: 
1.590517759 secs
8 threads: 
1.379525649 secs
12 threads: 
1.395160225 secs
16 threads: 
1.402599231 secs
Results (omitted printing latencies column):
5×6 DataFrame
 Row │ nthreads  time_secs  allocs    memory      gctime_secs  thread_counts                     
     │ Int64     Float64    Int64     Int64       Float64      Vector{Int64}                     
─────┼───────────────────────────────────────────────────────────────────────────────────────────
   1 │        1    3.50628  40005510  1920583104     0.110585  [1000]
   2 │        4    1.59052  40005024  1920575440     0.531459  [251, 246, 254, 249]
   3 │        8    1.37953  40005030  1920575696     0.790007  [131, 124, 125, 124, 124, 125, 1…
   4 │       12    1.39516  40005033  1920575856     0.964496  [87, 83, 83, 83, 83, 84, 83, 82,…
   5 │       16    1.4026   40005038  1920576080     1.05103   [66, 62, 62, 63, 62, 62, 63, 62,…
Processed:
5×6 DataFrame
 Row │ nthreads  time_secs  speedup_factor  marginal_speedup  utilization  latency_quantiles_ms              
     │ Int64     Float64    Float64         Float64           Float64      Tuple…                            
─────┼───────────────────────────────────────────────────────────────────────────────────────────────────────
   1 │        1    3.50628         1.0            1.0            1.0       (0.1=>3.35433, 0.5=>3.42275, 0.9…
   2 │        4    1.59052         2.20449        0.401496       0.551122  (0.1=>3.37731, 0.5=>4.40728, 0.9…
   3 │        8    1.37953         2.54166        0.0842916      0.317707  (0.1=>3.58205, 0.5=>4.84647, 0.9…
   4 │       12    1.39516         2.51317       -0.00712064     0.209431  (0.1=>4.93889, 0.5=>5.24567, 0.9…
   5 │       16    1.4026          2.49984       -0.0033323      0.15624   (0.1=>5.22933, 0.5=>5.67331, 0.9…
