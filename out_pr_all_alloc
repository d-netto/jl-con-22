------ JULIA VERSIONINFO ------
Julia Version 1.9.0-DEV.810
Commit facdf88645 (2022-07-06 18:09 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: 128 × AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-14.0.3 (ORCJIT, znver2)
  Threads: 16 on 128 virtual cores
Environment:
  JULIA_LOAD_PATH = @:/tmp/jl_x7nG7T
------ JULIA CPU INFO ------
Sys.CPU_THREADS = 128
AMD EPYC 7502 32-Core Processor: 
           speed         user         nice          sys         idle          irq
#1-128  1497 MHz  1700997229 s     541044 s  911750416 s  18365399601 s          0 s
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Running benchmark for /home/netto/MultithreadingBenchmarks.jl/src/../bench/all_tasks_allocating.jl
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
------ TEST PARAMETERS ------
nthreads_to_test = [1, 4, 8, 12, 16]
nqueries = 1000
num_ops = 1000000
warmup
NUM_QUERIES: 1
WORK_SIZE: 10
5 threads: 
0.000115559 secs
6 threads: 
0.000115969 secs
Results (omitted printing latencies column):
2×6 DataFrame
 Row │ nthreads  time_secs    allocs  memory  gctime_secs  thread_counts      
     │ Int64     Float64      Int64   Int64   Float64      Vector{Int64}      
─────┼────────────────────────────────────────────────────────────────────────
   1 │        5  0.000115559      22    1440          0.0  [0, 1, 0, 0, 0]
   2 │        6  0.000115969      22    1472          0.0  [0, 1, 0, 0, 0, 0]
Processed:
2×6 DataFrame
 Row │ nthreads  time_secs    speedup_factor  marginal_speedup  utilization  latency_quantiles_ms              
     │ Int64     Float64      Float64         Float64           Float64      Tuple…                            
─────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────
   1 │        5  0.000115559        1.0             1.0            0.2       (0.1=>9.0e-5, 0.5=>9.0e-5, 0.9=>…
   2 │        6  0.000115969        0.996465       -0.00353543     0.166077  (0.1=>9.0e-5, 0.5=>9.0e-5, 0.9=>…
run benchmark
NUM_QUERIES: 1000
WORK_SIZE: 1000000
1 threads: 
3.440743278 secs
4 threads: 
1.453954471 secs
8 threads: 
1.261923941 secs
12 threads: 
1.188928736 secs
16 threads: 
1.227774897 secs
Results (omitted printing latencies column):
5×6 DataFrame
 Row │ nthreads  time_secs  allocs    memory      gctime_secs  thread_counts                     
     │ Int64     Float64    Int64     Int64       Float64      Vector{Int64}                     
─────┼───────────────────────────────────────────────────────────────────────────────────────────
   1 │        1    3.44074  40005510  1920583104     0.14967   [1000]
   2 │        4    1.45395  40005025  1920575472     0.454552  [256, 246, 247, 251]
   3 │        8    1.26192  40005029  1920575664     0.697825  [134, 122, 124, 125, 124, 123, 1…
   4 │       12    1.18893  40005033  1920575856     0.78312   [88, 82, 82, 84, 83, 81, 84, 83,…
   5 │       16    1.22777  40005038  1920576080     0.895859  [67, 62, 62, 63, 62, 62, 62, 62,…
Processed:
5×6 DataFrame
 Row │ nthreads  time_secs  speedup_factor  marginal_speedup  utilization  latency_quantiles_ms              
     │ Int64     Float64    Float64         Float64           Float64      Tuple…                            
─────┼───────────────────────────────────────────────────────────────────────────────────────────────────────
   1 │        1    3.44074         1.0             1.0           1.0       (0.1=>3.25382, 0.5=>3.28949, 0.9…
   2 │        4    1.45395         2.36647         0.455491      0.591618  (0.1=>3.27167, 0.5=>4.23956, 0.9…
   3 │        8    1.26192         2.72659         0.0900282     0.340823  (0.1=>3.53953, 0.5=>4.65057, 0.9…
   4 │       12    1.18893         2.89399         0.0418502     0.241166  (0.1=>4.54771, 0.5=>4.93075, 0.9…
   5 │       16    1.22777         2.80242        -0.0228911     0.175151  (0.1=>5.14693, 0.5=>5.32082, 0.9…
